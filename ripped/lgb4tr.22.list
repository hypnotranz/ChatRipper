> 4856 modules transformed. dist/index.html 1.06 kB dist/assets/index-a8c0dc73.css 3.85 kB │ gzip: 1.38 kB dist/assets/md-7aa21ad3.css 22.84 kB │ gzip: 4.55 kB dist/assets/antico-8c74550c.js 9.01 kB │ gzip: 3.27 kB dist/assets/editor-75e5bfdc.js 16.04 kB │ gzip: 5.38 kB dist/assets/rrr-b1fff29c.js 18.30 kB │ gzip: 6.94 kB dist/assets/utils-70888d0d.js 73.12 kB │ gzip: 27.03 kB dist/assets/index-9adee497.js 90.79 kB │ gzip: 25.96 kB dist/assets/rm-c1d64a66.js 111.39 kB │ gzip: 34.35 kB dist/assets/md-4ec12d72.js 230.36 kB │ gzip: 62.57 kB dist/assets/rsh-6cfc2b4e.js 881.72 kB │ gzip: 293.80 kB dist/assets/ant-88a0e882.js 916.18 kB │ gzip: 286.22 kB (!) Some chunks are larger than 500 kBs after minification. Consider: - Using dynamic import() to code-split the application - Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks - Adjust chunk size limit for this warning via build.chunkSizeWarningLimit. Error failed to get project out directory: failed to get cargo metadata: No such file or directory (os error 2) error Command failed with exit code 1. info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.
1.  Check that the Cargo.toml file exists: Make sure that the Cargo.toml file is present in the root directory of your Tauri project. You can check this by navigating to the root directory of your project and running `ls -la`. The Cargo.toml file should be listed in the output.
2.  Check that the Tauri configuration is correct: Make sure that the Tauri configuration is set up correctly and that the `tauri.conf.json` file is present in the root directory of your project. Check that the path to the Cargo.toml file is specified correctly in the Tauri configuration.
3.  Try cleaning and rebuilding your project: Sometimes build artifacts or temporary files can cause issues with the build process. Try cleaning your project by running `yarn clean` and then rebuilding it by running `yarn build`.
4.  Try running Tauri with verbose logging: You can try running the Tauri command with the `--verbose` flag to get more detailed output and help diagnose the issue. For example:

